@startuml MyModelisation

interface Model
{
    {abstract}+getEntA()
    {abstract}+setEntA(..)
    {abstract}+checkOnWin()
    {abstract}+..()
}

interface Ihm
{
    {abstract}+display()
    {abstract}+setViewA(MyModel.EntA)
    {abstract}+handle(..)
    {abstract}+...()
}

note bottom of MyModelEntA : MyModel.EntA (static class)
class MyModelEntA
{
    +<data>
}

note bottom of MyModelEntB : MyModel.EntB (static class)
class MyModelEntB
{
    +<data>
}

Model <|-- MyModel
MyModel *-- MyModelEntA
MyModel *-- MyModelEntB
class MyModel
{
    +getEntA()
    +setEntA(MyModel.EntA)
    +checkOnWin()
    +..()
}

class AnimationFactory
{
    +{static}get..(..) : ..
}

class GraphicFactory
{
    +{static}get..(..) : ..
}

note bottom of MyIhmViewA : MyIhm.ViewA (static class)
class MyIhmViewA
{
    -<data>
    -create()
    +set(..)
    +display()
}

note bottom of MyIhmViewB : MyIhm.ViewB (static class)
class MyIhmViewB
{
    -<data>
    -create()
    +set(..)
    +display()
}

note bottom of MyIhm : easily replacable
Ihm <|-- MyIhm
MyIhm *-- MyIhmViewA
MyIhm *-- MyIhmViewB
GraphicFactory <-- MyIhmViewA : use
AnimationFactory <-- MyIhmViewA : use
class MyIhm
{
    +display()
    +setViewA(MyModel.EntA)
    +handle(..)
    +...()
}

interface Ai 
{
    {abstract} + nextMove()
}

note top of Ai : Strategy pattern
Ai 	<|-- Random
class Random
{
    + nextMove()
}

note left of MinMax : <b>nextMove</b> is a \ntemplate method
Ai 	<|-- MinMax
class MinMax
{
    + nextMove()
    - genTree()
    - evalNodes()
}

MinMax 	<|-- MinMaxMulti
class MinMaxMulti
{
    - genTree()
    - evalNodes()
}

MinMaxMulti *-- ThreadPool
class ThreadPool
{

}

ThreadPool *-- "1..*" SFMLThread
class SFMLThread

note left of Controller : <b>updateView</b> updates\nViews based on MyModel
Controller *-- Model
Controller *--> Ihm
Controller *-- Ai
class Controller
{
    + updateView()
    + UC1()
    +...()
}

Launcher *-- Controller
class Launcher
{
    + run()
}
@enduml